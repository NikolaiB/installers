#!/bin/bash

mkdir /tmp/Subutai

vboxmanage="/usr/local/bin/VBoxManage"
plugin_path=/Users/$(users)/Library/Application\ Support/Google/Chrome/External\ Extensions/kpmiofpmlciacjblommkcinncmneeoaa.json

ssh-keygen -R "[localhost]:4567"

function jsonval {
    temp=`echo $json | sed 's/\\\\\//\//g' | sed 's/[{}]//g' | awk -v k="text" '{n=split($0,a,","); for (i=1; i<=n; i++) print a[i]}' | sed 's/\"\:\"/\|/g' | sed 's/[\,]/ /g' | sed 's/\"//g' | grep -w $prop`
    echo ${temp##*|}
}

function download {
	json=`curl -k -s -X GET https://peer.noip.me:8338/kurjun/rest/file/info?name=$filename`
	prop='id'
	id=`jsonval`
	if [ -e $target ]; then
		if [ "`md5 $target | awk '{print $4}'`" = "`echo $id | cut -d '.' -f 2`"]; then :
		else curl -k -o $target https://peer.noip.me:8338/kurjun/rest/file/get\?id\=$id
		fi
	else curl -k -o $target https://peer.noip.me:8338/kurjun/rest/file/get\?id\=$id
	fi
} 

function get_ova {
	target="/Applications/Subutai/snappy.ova"; filename="snappy.ova"; download
}

function get_snap {
	mkdir /Applications/Subutai/snap/
	target="/Applications/Subutai/snap/subutai_4.0.0_amd64.snap"; filename="subutai_4.0.0_amd64.snap"; download
}

function install_tuntap {
	target="/tmp/Subutai/tuntap_20150118.pkg"; filename="tuntap_20150118_osx.pkg"; download
	sudo installer -pkg /tmp/Subutai/tuntap_20150118.pkg -target /
}

function install_libssh2 {
	target="/tmp/Subutai/libssh2-1.6.0-0.pkg"; filename="libssh2-1.6.0-0_osx.pkg"; download
	sudo installer -pkg /tmp/Subutai/libssh2-1.6.0-0.pkg -target /
}

function get_tray {
	target="/tmp/Subutai/SubutaiTray.tar.gz"; filename="SubutaiTray.app_osx.tar.gz"; download
	/usr/bin/tar -xf /tmp/Subutai/SubutaiTray.tar.gz -C /Applications/Subutai
}

function get_p2p {
	target="/Applications/Subutai/p2p"; filename="p2p_osx"; download
	chmod a+x /Applications/Subutai/p2p
}

function install_vbox {
	target="/tmp/Subutai/VirtualBox.pkg"; filename="VirtualBox_osx.pkg"; download
	sudo installer -pkg /tmp/Subutai/VirtualBox.pkg -target /
}

function get_chrome {
	target="/tmp/Subutai/GoogleChrome.tar.gz"; filename="GoogleChrome_osx.tar.gz"; download
	/usr/bin/tar -xf /tmp/Subutai/GoogleChrome.tar.gz -C /Applications
}

get_tray
get_p2p
get_ova
get_snap

if [ -e /Applications/VirtualBox.app ]; then
	vboxmanage_version=`sudo -H -u $(users) $vboxmanage --version | cut -d 'r' -f 1`
	virtualbox_version=$(echo $vboxmanage_version | cut -d '.' -f 1)\
$(echo $vboxmanage_version | cut -d '.' -f 2 | xargs printf "%02d")\
$(echo $vboxmanage_version | cut -d '.' -f 3 | xargs printf "%02d")

	if [ $(printf '%d\n' $virtualbox_version) -ge 50014 ]; then :
	else install_vbox
	fi
else install_vbox
fi

if [ -e /dev/tap0 ]; then :
else install_tuntap
fi

if [ -e /usr/local/lib/libssh2.dylib ]; then :
else install_libssh2
fi

if [ -e "/Applications/Google Chrome.app" ]; then :
else get_chrome
fi

function get_memvm {
totalmem=`sudo -H -u $(users) sysctl hw.memsize | LC_NUMERIC=POSIX awk '{print \$2}'`
if [ $totalmem -ge 8000000000 ]; then 
		memvm=$(($totalmem/4/1024/1024))
	else
		memvm=$(($totalmem/2/1024/1024))
fi
}

function import_vm {
sudo -H -u $(users) $vboxmanage import /Applications/Subutai/snappy.ova
sudo -H -u $(users) $vboxmanage modifyvm snappy --cpus 4
sudo -H -u $(users) $vboxmanage modifyvm snappy --memory $memvm
sudo -H -u $(users) $vboxmanage modifyvm snappy --nic1 nat
sudo -H -u $(users) $vboxmanage modifyvm snappy --cableconnected1 on
sudo -H -u $(users) $vboxmanage modifyvm snappy --natpf1 "ssh-fwd,tcp,,4567,,22" --natpf1 "https-fwd,tcp,,9999,,8443"
sudo -H -u $(users) $vboxmanage modifyvm snappy --rtcuseutc on
sudo -H -u $(users) $vboxmanage modifyvm snappy --name subutai
sudo -H -u $(users) $vboxmanage startvm --type headless subutai
}

function wait_ssh {
while [ $(sleep 1 | telnet localhost 4567 | grep SSH > /dev/null 2>&1; echo $?) != "0" ]; do
	sleep 1
done
}

function copy_key {
pubkey="$(cat /var/root/.ssh/id_rsa.pub)"
/usr/bin/expect -f - <<EOF
set timeout 30
spawn ssh -o StrictHostKeyChecking=no ubuntu@localhost -p4567 "sudo bash -c 'echo $pubkey >> /home/ubuntu/.ssh/authorized_keys' "
expect "?assword:"
send "ubuntu\r"
expect eof
EOF
}

function install_subutai {
scp -P4567 -o StrictHostKeyChecking=no /Applications/Subutai/scripts/prepare-server /Applications/Subutai/snap/subutai_4.0.0_amd64.snap ubuntu@localhost:~/
ssh -o StrictHostKeyChecking=no ubuntu@localhost -p4567 "sudo /home/ubuntu/prepare-server"
}

function set_path {
sudo -H -u $(users) echo '\nexport PATH="/Applications/Subutai:$PATH"' >> ~/.bash_profile
}

function create_config {
sudo -u $(users) mkdir /usr/local/etc/p2p
sudo -u $(users) echo "iptool: /sbin/ifconfig" > /usr/local/etc/p2p/config.yaml
}

function install_plugin {
sudo -u $(users) mkdir -p /Users/$(users)/Library/Application\ Support/Google/Chrome/External\ Extensions
sudo -u $(users) printf '{\n\t"external_update_url": "https://clients2.google.com/service/update2/crx"\n}' > /Users/$(users)/Library/Application\ Support/Google/Chrome/External\ Extensions/kpmiofpmlciacjblommkcinncmneeoaa.json
}

function run_services {
/Applications/Subutai/p2p daemon &>/dev/null &
sudo -u $(users) open /Applications/Subutai/SubutaiTray.app
}

get_memvm

if [ "sudo -H -u $(users) $vboxmanage list vms | grep subutai" ]; then
	sudo -H -u $(users) $vboxmanage controlvm subutai poweroff
	sudo -H -u $(users) $vboxmanage unregistervm subutai --delete
	import_vm
else
	import_vm
fi
wait_ssh
if [ -f "/var/root/.ssh/id_rsa.pub" ]; then
	copy_key
else
	ssh-keygen -t rsa -f /var/root/.ssh/id_rsa -q -N ""
	copy_key
fi
install_subutai
if [ "`sudo -u $(users) grep Subutai ~/.bash_profile`" ];then :; else set_path; fi
if [ -e /usr/local/etc/p2p/config.yaml ]; then :; else create_config; fi
if [ -e plugin_path ]; then :; else install_plugin; fi
if [ -e /Applications/Subutai ]; then run_services; fi

#clean
chown -R $(users) /Applications/Subutai/
/bin/rm -rf /tmp/Subutai
